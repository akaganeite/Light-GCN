import visdom
import utils
import numpy as np
#atk_lgn_train
viz=visdom.Visdom(env='train')
'''
#atk_lgn_train_20
eps=[0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1]
predict={}#    precision   recall    ndcg
predict['precision']=[0.73083067,0.71730564,0.68711395,0.63953674,
0.56778488,0.4701278,0.35039936,0.22326944,0.11664004,0.04880192,0.01605431]
predict['recall']=[0.69086117,0.67924705,0.65275653,0.61098851,
0.56778488,0.46049743,0.35183651,0.23460921,0.13297472,0.06520187,0.02966257]
predict['ndcg']=[0.81771278,0.80335733,0.7707755,0.71733174,
0.63609673,0.5240083,0.38528285,0.24311592,0.12826632,0.05704324,0.02255579]

#random_lgn_train_20:
eps=[0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1]
predict={}#    precision   recall    ndcg
predict['precision']=[0.73083067,0.73080405,0.73056443,0.73027157,0.72957934,0.72891374,0.72886049,0.72819489,0.7271033,0.72529286,0.72438765]
predict['recall']=[0.69086117,0.69085517,0.69072776,0.69046487,0.68989002,0.68935406,0.68927184,0.68861309,0.68748673,0.68581198,0.6849589]
predict['ndcg']=[0.81771278,0.81769405,0.81761484,0.81733561,0.81688036,0.81635957,0.81619978,0.81549823,0.8145445,0.81274561,0.81178034]
eps=[0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0]
predict={}#    precision   recall    ndcg
predict['precision']=[0.73083067,0.72965921,0.72790202,0.72257721,
0.70958466,0.68546326,0.64555378,0.54156017,0.21999468,0.02438765,0.00495208]
predict['recall']=[0.69086117,0.68995409,0.68827446,0.68298031,
0.67114283,0.64831906,0.61135268,0.5195386,0.2190146,0.02145078,0.00380055]
predict['ndcg']=[0.81771278,0.81665432,0.8150082,0.81012845,
0.79880057,0.77715327,0.73837242,0.62503189,0.24318363,0.02547216,0.0050469]

#atk_lgn_test_20
eps=[0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1]
predict={}#    precision   recall    ndcg
predict['precision']=[0.0757535,0.07567277,0.07543057,0.0742465,0.07311625,0.07023681,0.06423574,0.05694295,0.04714747,0.03651776,0.02790635]
predict['recall']=[0.27034387,0.26946476,0.26790038,0.2638658,0.25990203,0.24943857,0.22705414,0.20036681,0.16277918,0.12541172,0.09441933]
predict['ndcg']=[0.21015408,0.20940044,0.2090462,0.20626766,0.20244384,0.19256021,0.1758773,0.15141587,0.12148572,0.09233366,0.06781255]

#random_lgn_test_20
eps=[0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1]
predict={}#    precision   recall    ndcg
predict['precision']=[0.0757535,0.07572659,0.07521529,0.07502691,0.07416577,0.07343918,0.07185145,0.06972551,0.06622713,0.06154467,0.05522067]
predict['recall']=[0.27034387,0.27001088,0.2677664,0.2678763,0.26353169,0.26031535,0.25570361,0.24791526,0.23587858,0.21976139,0.19731225]
predict['ndcg']=[0.21015408,0.21001146,0.20937866,0.20954656,0.20644862,0.2035845,0.19867009,0.19072784,0.17895534,0.16451036,0.14546461]

'''

def cal_percentage(list):
    max=list[0]
    result=[]
    for data in list:
        result.append(float(data/max))
    return result



#ran_pureMF_test_100:
eps=[0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1]
predict={}#    precision   recall    ndcg
predict['precision']=[0.008116254036598493, 0.008153928955866523, 0.008105489773950484,
0.008164693218514532, 0.00810010764262648, 0.008094725511302475, 0.007927879440258342, 0.007653390742734123, 0.0073466092572658775, 0.007104413347685683, 0.006824542518837459]
predict['recall']=[0.14988125674743163, 0.1506490647676616, 0.14947507281056954,
0.15000579134451733, 0.14909835252233783, 0.1489154084481128, 0.14495089431137048, 0.14043007874373037, 0.134381998061318, 0.13017368394988227, 0.12482713971269026]
predict['ndcg']=[0.06773629090809444, 0.06824544917066835, 0.06806612646779446,
0.06827349783460825, 0.06828169599509987, 0.06795393727439604, 0.06540324403640611, 0.06355464162610347, 0.05985241695014121, 0.057047282676306654, 0.05308412038015722]





viz.line(
    X=eps,
    Y=predict['precision'],
    win='Precision',
    name='MF',
    opts={
        'showlegend': True,  # 显示网格
        'title': "MF_LastFM_TestSet",
        'xlabel':'eps',
        'ylabel':'precision@100',
    }
)

viz.line(
    X=eps,
    Y=predict['recall'],
    win='recall',
    name='MF',
    opts={
        'showlegend': True,  # 显示网格
        'title': "MF_LastFM_TestSet",
        'xlabel':'eps',
        'ylabel':'recall@100',
    }
)

viz.line(
    X=eps,
    Y=predict['ndcg'],
    win='ndcg',
    name='MF',
    opts={
        'showlegend': True,  # 显示网格
        'title': "MF_LastFM_TestSet",
        'xlabel':'eps',
        'ylabel':'ndcg@100',
    }
)

#atk_pureMF_test_100:
eps=[0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1]
predict={}#    precision   recall    ndcg
predict['precision']=[0.008116254036598493, 0.008067814854682455, 0.008046286329386436,
 0.008013993541442412, 0.007895586652314317, 0.007739504843918192, 0.007416576964477933, 0.007125941872981701, 0.0069644779332615715, 0.006749192680301399, 0.006614639397201291]
predict['recall']=[0.14988125674743163, 0.1491078957345658, 0.14830461457606395,
0.14748077778613458, 0.14545135313830307, 0.14300698193720415, 0.13659178040628683, 0.13172344278768008, 0.1286086604882907, 0.12382534578839906, 0.12143057716887895]
predict['ndcg']=[0.06773629090809444, 0.06754915487062498, 0.06743626806731037,
0.0663509385941165, 0.0642864836458563, 0.06221991028287101, 0.058784998609840655, 0.05434875084546365, 0.0511863588558501, 0.04756845375729898, 0.04603895673333951]



viz.line(
    X=eps,
    Y=predict['precision'],
    name='GCN',
    win='Precision',
    update='append'
)

viz.line(
    X=eps,
    Y=predict['recall'],
    win='recall',
    name='GCN',
    update='append'
)

viz.line(
    X=eps,
    Y=predict['ndcg'],
    win='ndcg',
    name='GCN',
    update='append'
)